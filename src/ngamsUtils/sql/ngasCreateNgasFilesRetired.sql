/*
 *   ALMA - Atacama Large Millimiter Array
 *   (c) European Southern Observatory, 2002
 *   Copyright by ESO (in the framework of the ALMA collaboration),
 *   All rights reserved
 *
 *   This library is free software; you can redistribute it and/or
 *   modify it under the terms of the GNU Lesser General Public
 *   License as published by the Free Software Foundation; either
 *   version 2.1 of the License, or (at your option) any later version.
 *
 *   This library is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *   Lesser General Public License for more details.
 *
 *   You should have received a copy of the GNU Lesser General Public
 *   License along with this library; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *   MA 02111-1307  USA
 *
 */

/******************************************************************************
 *
 * "@(#) $Id: ngasCreateNgasFilesRetired.sql,v 1.2 2008/08/19 20:37:45 jknudstr Exp $"
 *
 * Who       When        What
 * --------  ----------  -----------------------------------------------------
 * jknudstr  16/08/2005  Created 
 */

/*
 * Invoke as follows (e.g.): 
 *
 * % isql -STESTSRV -Ungas -P***** -D<DB Name> \
 *   < ngamsCreateNgasFilesRetired.sql
 */

print "Using database: ngas"
use ngas
go

print "Dropping existing ngas_files_retired table"
drop table ngas_files_retired
go


/* --------------------------------------------------------------------- */
print "Creating ngas_files_retired table"
go
/*-
 * Table: 
 *   NGAS Files Table - ngas_files_retired
 *
 * Description:
 *   The ngas_files_retired table is used to store the information about each file
 *   archived into the NGAS System hosted on disks, which have been retired with the
 *   ngasRetireDisk Tool. The table provide for each file all the information to handle
 *   and track down the given file.
 *
 * Columns:
 *   disk_id:                 ID of the disk where the file is stored.
 *
 *   file_name:               Name of the file. This must be given relative to
 *                            the mount point of the disk.
 *
 *   file_id:                 File ID allocated to the file by the DAPI. The
 *                            set of File ID, Disk ID and File Version,
 *                            uniquely defines a file.
 *
 *   file_version:            Version of the file. The first version is 
 *                            number 1.
 *
 *   format:                  Format of the file. This is generated by the
 *                            DAPI. Should be the mime-type of the file, as
 *                            stored on the disk.
 *
 *   file_size:               Size of the file. This must be given in bytes. If
 *                            the file is compressed, the compressed file size
 *                            must between given as value for this column.
 *
 *   uncompressed_file_size:  If the file was compressed this indicates the
 *                            size of the uncompressed file. If the file is not
 *                            compressed this will be equal to the file_size.
 *
 *   compression:             The compression method applied on the file. Could
 *                            be e.g. "gzip". This should indicate clearly how
 *                            the file has been compressed, to make it possible
 *                            to decompress it at a later stage.
 *
 *  ingestion_date:           Date the file was ingested/archived.
 *
 *  ignore:                   Used to indicate that this file should be ignored
 *                            (1 = ignore). If set to one, this entry for this
 *                            file, will not be taken into account by NG/AMS
 *                            when files or information about files is queried.
 *
 *  checksum:                 Checksum of the file. This value is generated by
 *                            the checksum plug-in specified in the configura-
 *                            tion.
 *
 *  checksum_plugin:          Name of the checksum plug-in used to generate the
 *                            checksum for the file. This is used by NG/AMS
 *                            when performing the Data Consistency Checking of
 *                            data files. NG/AMS in this way, invokes the same
 *                            plug-in as was used to generate the checksum
 *                            originally.
 *
 *  file_status:              Current status of the file. The status should
 *                            between seen as a sequence of bytes, each with a
 *                            certain signification what concerns the condition
 *                            and status of the file. These bytes are used to
 *                            indicate the following (when set to 1). The bytes
 *                            in the status are counted from left to right:
 *
 *                              1:    The File Checksum is incorrect.
 *                              2:    File being checked.
 *                              3-8:  Not used.
 *
 *                            The bytes 3-8 may be used at a later stage.
 *
 *  creation_date:            Date the file was created. This may between
 *                            different from ingestion_date since this
 *                            indicates when the file was archived into the
 *                            system. If a file was cloned, the creation_date
 *                            will be more recent tha the ingestion_date.
-*/
Create table ngas_files_retired
(
	disk_id			varchar(128)	not null,
	file_name		varchar(255)	not null,
	file_id			varchar(64)	not null,
	file_version            int             default 1,
	format			varchar(32)	not null,
	file_size		numeric(20, 0)	not null,
	uncompressed_file_size	numeric(20, 0)	not null,
	compression		varchar(32)	null,
	ingestion_date		datetime	not null,
	ignore                  tinyint         null,
	checksum	        varchar(64)	null,
	checksum_plugin         varchar(64)	null,
	file_status             char(8)         default '00000000',
        creation_date           datetime        null
)
go
print "Create index on ngas_files_retired"
create unique clustered index dcode_cluster on ngas_files_retired(file_id,
                                                                  file_version,
                                                                  disk_id)
go
print "Granting"
grant insert, update, delete, select, delete on ngas_files_retired to ngas
go
grant select on ngas_files_retired to public
go

/* EOF */
